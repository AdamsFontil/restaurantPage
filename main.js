(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),c=t.n(a),i=t(667),s=t.n(i),d=new URL(t(831),t.b),l=new URL(t(771),t.b),u=c()(o()),p=s()(d),m=s()(l);u.push([e.id,"* {\n    color: #E3B448;\n    margin: 0;\n     /* mustard */\n}\nbody {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n  }\n\n  .title {\n    background-color: forestgreen;\n    color: wheat;\n    text-align: center;\n    padding: 20px;\n  }\n\n  .nav {\n    background-color: forestgreen;\n    text-align: center;\n    padding: 10px;\n  }\n\n  .nav ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    display: inline-block;\n  }\n\n  .nav li {\n    display: inline-block;\n    margin: 0 10px;\n  }\n\n  .nav a {\n    color: #CBD18F;\n    /* sage; */\n    text-decoration: none;\n  }\n\n  main {\n    padding: 20px;\n  }\n\n  section {\n    margin-bottom: 20px;\n  }\n\n  section h2 {\n    margin-top: 0;\n  }\n  .body {\n    background-color: brown;\n    /* background-image: url('./images/jungle-g5ddf0e18e_1920.jpg'); */\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center;\n    height: 100vh;\n    width: 1fr;\n    display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.body > * {\n\n  background-color: rgb(56, 53, 53);\n  opacity: .6;\n\n  width: 500px;\n  /* padding: 20px; */\n}\n.footer {\n  /* padding: 20px; */\n  background-color: forestgreen;\n}\n#home {\n  background-image: url("+p+")\n}\n#about {\n  background-image: url("+m+")\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,cAAc;IACd,SAAS;KACR,YAAY;AACjB;AACA;IACI,8BAA8B;IAC9B,SAAS;IACT,UAAU;EACZ;;EAEA;IACE,6BAA6B;IAC7B,YAAY;IACZ,kBAAkB;IAClB,aAAa;EACf;;EAEA;IACE,6BAA6B;IAC7B,kBAAkB;IAClB,aAAa;EACf;;EAEA;IACE,qBAAqB;IACrB,SAAS;IACT,UAAU;IACV,qBAAqB;EACvB;;EAEA;IACE,qBAAqB;IACrB,cAAc;EAChB;;EAEA;IACE,cAAc;IACd,UAAU;IACV,qBAAqB;EACvB;;EAEA;IACE,aAAa;EACf;;EAEA;IACE,mBAAmB;EACrB;;EAEA;IACE,aAAa;EACf;EACA;IACE,uBAAuB;IACvB,kEAAkE;IAClE,4BAA4B;IAC5B,sBAAsB;IACtB,2BAA2B;IAC3B,aAAa;IACb,UAAU;IACV,aAAa;EACf,uBAAuB;EACvB,mBAAmB;AACrB;AACA;;EAEE,iCAAiC;EACjC,WAAW;;EAEX,YAAY;EACZ,mBAAmB;AACrB;AACA;EACE,mBAAmB;EACnB,6BAA6B;AAC/B;AACA;EACE;AACF;AACA;EACE;AACF",sourcesContent:["* {\n    color: #E3B448;\n    margin: 0;\n     /* mustard */\n}\nbody {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n  }\n\n  .title {\n    background-color: forestgreen;\n    color: wheat;\n    text-align: center;\n    padding: 20px;\n  }\n\n  .nav {\n    background-color: forestgreen;\n    text-align: center;\n    padding: 10px;\n  }\n\n  .nav ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    display: inline-block;\n  }\n\n  .nav li {\n    display: inline-block;\n    margin: 0 10px;\n  }\n\n  .nav a {\n    color: #CBD18F;\n    /* sage; */\n    text-decoration: none;\n  }\n\n  main {\n    padding: 20px;\n  }\n\n  section {\n    margin-bottom: 20px;\n  }\n\n  section h2 {\n    margin-top: 0;\n  }\n  .body {\n    background-color: brown;\n    /* background-image: url('./images/jungle-g5ddf0e18e_1920.jpg'); */\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center;\n    height: 100vh;\n    width: 1fr;\n    display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.body > * {\n\n  background-color: rgb(56, 53, 53);\n  opacity: .6;\n\n  width: 500px;\n  /* padding: 20px; */\n}\n.footer {\n  /* padding: 20px; */\n  background-color: forestgreen;\n}\n#home {\n  background-image: url('./images/forest-g02f1a7280_1920.jpg')\n}\n#about {\n  background-image: url('./images/jungle-g5ddf0e18e_1920.jpg')\n}\n"],sourceRoot:""}]);const A=u},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(c[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&c[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},c=[],i=0;i<e.length;i++){var s=e[i],d=r.base?s[0]+r.base:s[0],l=a[d]||0,u="".concat(d," ").concat(l);a[d]=l+1;var p=t(u),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(m);else{var A=o(m,r);r.byIndex=i,n.splice(i,0,{identifier:u,updater:A,references:1})}c.push(u)}return c}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var i=t(a[c]);n[i].references--}for(var s=r(e,o),d=0;d<a.length;d++){var l=t(a[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},831:(e,n,t)=>{e.exports=t.p+"87f4b1a4f66d3f082d51.jpg"},771:(e,n,t)=>{e.exports=t.p+"17c8e94b6f84972ed770.jpg"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),a=t(569),c=t.n(a),i=t(565),s=t.n(i),d=t(216),l=t.n(d),u=t(589),p=t.n(u),m=t(426),A={};A.styleTagTransform=p(),A.setAttributes=s(),A.insert=c().bind(null,"head"),A.domAPI=o(),A.insertStyleElement=l(),n()(m.Z,A),m.Z&&m.Z.locals&&m.Z.locals;let g=()=>{const e=document.querySelector(".body");var n=document.createElement("h2");n.className="body-text",n.textContent="Hello, welcome to the Jungle Buffet. The Restaurant that's been completely revamped after the owner went to South America just one time. We still serve regular food, up until a few weeks back we were just a regular buffet. But apparently the Amazon is a sight for sore eyes. So we've completely revamped our stores, and the website as well. Maybe this is just a phase thing, we don't know but I'm just doing what I'm told. So without further adieu, welcome to Jungle Buffet. Formerly known as the Buffet on 163rd.",e.textContent="",e.id="home",e.appendChild(n)};(()=>{const e=document.querySelector(".content");var n=document.createElement("div");n.className="title";var t=document.createElement("h1");t.textContent="Jungle Buffet",n.appendChild(t),e.appendChild(n);var r=document.createElement("div");r.className="nav";var o=document.createElement("ul");r.appendChild(o);var a=document.createElement("li");a.innerHTML="<a href='#home'>Home</a>",a.className="HomeTab",o.appendChild(a);var c=document.createElement("li");c.innerHTML="<a href='#menu'>Menu</a>",c.className="menuTab",o.appendChild(c);var i=document.createElement("li");i.innerHTML="<a href='#about'>About</a>",i.className="aboutTab",o.appendChild(i);var s=document.createElement("li");s.innerHTML="<a href='#location'>Location</a>",s.className="locationTab",o.appendChild(s);var d=document.createElement("li");d.innerHTML="<a href='#reservations'>Reservations</a>",d.className="reservationTab",o.appendChild(d),e.appendChild(r);var l=document.createElement("div");l.className="body",e.appendChild(l);var u=document.createElement("div");u.className="footer";var p=document.createElement("p");p.textContent="Copyright Jungle Buffet",u.appendChild(p),e.appendChild(u)})(),g(),document.querySelector(".content"),document.querySelector(".body"),document.querySelector(".nav");const f=document.querySelector(".HomeTab"),h=document.querySelector(".menuTab"),v=document.querySelector(".aboutTab"),C=document.querySelector(".locationTab"),b=document.querySelector(".reservationTab");document.querySelector(".menu"),document.querySelector(".about"),document.querySelector(".location"),document.querySelector(".reservation"),h.addEventListener("click",(()=>{(()=>{const e=document.querySelector(".body");console.log("menu loaded");var n=document.createElement("div");n.classList.add("menu");var t=document.createElement("h2");t.textContent="Our Menu";var r=document.createElement("p");r.textContent="Check out our delicious menu items:";for(var o=document.createElement("ul"),a=["Spaghetti Bolognese","Grilled Salmon","Pesto Pasta","New York-Style Pizza"],c=0;c<a.length;c++){var i=document.createElement("li");i.textContent=a[c],o.appendChild(i)}n.appendChild(t),n.appendChild(r),n.appendChild(o),e.textContent="",e.style.backgroundImage="url('/Users/user/Odin/Projects/restaurantPage//src/images/rainforest-3119822_1920.jpg')",e.appendChild(n)})()})),v.addEventListener("click",(()=>{(()=>{const e=document.querySelector(".body"),n=document.querySelector(".footer");var t=document.createElement("div");t.classList.add("about");var r=document.createElement("h2");r.textContent="About Us";var o=document.createElement("p");o.textContent="Delicious Restaurant is a family-owned business that has been serving delicious food for over 10 years. We use only the freshest ingredients in our dishes and pride ourselves on our friendly service.",t.appendChild(r),t.appendChild(o),console.log("footer"),n.textContent="testing 1 2 3 ",e.textContent="",e.id="about",e.appendChild(t)})()})),f.addEventListener("click",(()=>{g()})),C.addEventListener("click",(()=>{(()=>{const e=document.querySelector(".body");var n=document.createElement("div");n.classList.add("location");var t=document.createElement("h2");t.textContent="Our Location";var r=document.createElement("p");r.textContent="123 Main St, Anytown USA",n.appendChild(t),n.appendChild(r),e.textContent="",e.style.backgroundImage="url('/Users/user/Odin/Projects/restaurantPage/src/images/rainforest-3119822_1920.jpg')",e.appendChild(n)})()})),b.addEventListener("click",(()=>{(()=>{const e=document.querySelector(".body");var n=document.createElement("div");n.classList.add("reservations");var t=document.createElement("h2");t.textContent="Reservations";var r=document.createElement("p");r.textContent="To make a reservation, please call 555-555-5555 or visit our website to book online.",n.appendChild(t),n.appendChild(r),e.textContent="",e.style.backgroundImage="url('/Users/user/Odin/Projects/restaurantPage/src/images/the-1865639_1920.jpg')",e.appendChild(n)})()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,